exporters:
    otlp/gateway-test-test:
        balancer_name: ""
        batcher:
            enabled: true
            flush_timeout: 200ms
            max_size: 0
            min_size: 8192
            sizer: {}
        endpoint: test-gateway.test.svc.cluster.local:4618
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        sending_queue:
            batch: null
            block_on_overflow: false
            blocking: false
            enabled: true
            num_consumers: 10
            queue_size: 1000
            sizer: {}
            storage: null
            wait_for_result: false
        timeout: 5s
extensions:
    file_storage:
        compaction:
            rebound_needed_threshold_mib: 0
            rebound_trigger_threshold_mib: 0
        directory: /var/otel/storage
        timeout: 1s
    pprof:
        block_profile_fraction: 0
        mutex_profile_fraction: 0
        save_to_file: ""
receivers:
    filelog/k8saudit:
        include:
            - /var/log/kube-audit/audit.log
        include_file_name: false
        include_file_path: false
        operators:
            - id: parse-body
              timestamp:
                layout: '%Y-%m-%dT%H:%M:%S.%LZ'
                parse_from: attributes.stageTimestamp
              type: json_parser
            - field: attributes.log_type
              type: add
              value: auditlog
            - field: attributes.kubernetes_component
              type: add
              value: kubeauditlogs
            - from: attributes.stage
              to: resource["k8s.auditlog.stage"]
              type: move
            - from: attributes.stageTimestamp
              to: resource["k8s.auditlog.stage_timestamp"]
              type: move
            - from: attributes.level
              to: resource["k8s.auditlog.level"]
              type: move
            - from: attributes.auditID
              to: resource["k8s.auditlog.audit_id"]
              type: move
            - from: attributes.objectRef.resource
              to: resource["k8s.auditlog.resource"]
              type: move
            - fields:
                - attributes.stage
                - attributes.stageTimestamp
                - attributes.level
                - attributes.auditID
                - attributes.objectRef.resource
                - attributes.cluster_id
                - attributes.time
                - attributes.log
                - attributes.log_type
              type: retain
        storage: file_storage
    filelog/k8slog:
        exclude: []
        include:
            - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
            - id: get-format
              routes:
                - expr: body matches "^\\{"
                  output: parser-docker
                - expr: body matches "^[^ Z]+ "
                  output: parser-crio
                - expr: body matches "^[^ Z]+Z"
                  output: parser-containerd
              type: router
            - id: parser-crio
              output: extract_metadata_from_filepath
              regex: ^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
              timestamp:
                layout: "2006-01-02T15:04:05.000000000-07:00"
                layout_type: gotime
                parse_from: attributes.time
              type: regex_parser
            - id: parser-containerd
              output: extract_metadata_from_filepath
              regex: ^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
              timestamp:
                layout: '%Y-%m-%dT%H:%M:%S.%LZ'
                parse_from: attributes.time
              type: regex_parser
            - id: parser-docker
              output: extract_metadata_from_filepath
              timestamp:
                layout: '%Y-%m-%dT%H:%M:%S.%LZ'
                parse_from: attributes.time
              type: json_parser
            - id: extract_metadata_from_filepath
              parse_from: attributes["log.file.path"]
              regex: ^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_((?P<confighash>[a-f0-9]{32})|(?P<uid>[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}))\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$
              type: regex_parser
            - field: attributes["log.file.path"]
              type: remove
            - from: attributes.namespace
              id: move-namespace
              to: resource["k8s.namespace.name"]
              type: move
            - from: attributes.pod_name
              id: move-pod-name
              to: resource["k8s.pod.name"]
              type: move
            - from: attributes.container_name
              id: move-container-name
              to: resource["k8s.container.name"]
              type: move
            - from: attributes.uid
              to: resource["k8s.pod.uid"]
              type: move
            - from: attributes.confighash
              to: resource["k8s.pod.confighash"]
              type: move
        storage: file_storage
    filelog/rke2agent:
        include:
            - /var/lib/rancher/rke2/agent/logs/kubelet.log
        include_file_name: false
        include_file_path: true
        operators:
            - id: time-sev
              on_error: drop
              regex: ^(?P<klog_level>[IWEF])(?P<klog_time>\d{4} \d{2}:\d{2}:\d{2}\.\d+)
              severity:
                mapping:
                    error: E
                    fatal: F
                    info: I
                    warn: W
                parse_from: attributes.klog_level
              timestamp:
                layout: '%m%d %H:%M:%S.%L'
                parse_from: attributes.klog_time
              type: regex_parser
            - from: body
              to: attributes.message
              type: move
            - field: attributes.log_type
              type: add
              value: controlplane
            - field: attributes.kubernetes_component
              type: add
              value: kubelet
        storage: file_storage
    journald/k3s:
        directory: /var/log/journald
        storage: file_storage
        units:
            - k3s
    journald/rke2:
        directory: /var/log/journald
        storage: file_storage
        units:
            - rke2-server
            - rke2-agent
service:
    extensions:
        - pprof
        - file_storage
    pipelines:
        logs:
            exporters:
                - otlp/gateway-test-test
            receivers:
                - filelog/k8saudit
                - journald/rke2
                - filelog/rke2agent
                - journald/k3s
                - filelog/k8slog
